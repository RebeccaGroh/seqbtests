% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bayesian_sequential_tests.R
\name{seq_b_hierarchical_test}
\alias{seq_b_hierarchical_test}
\title{Sequential Bayesian hierarchical correlated t-test}
\usage{
seq_b_hierarchical_test(
  baseline,
  algorithm = NULL,
  measure = NULL,
  compare = NULL,
  rho = 0.1,
  max_repls = 20,
  rope = c(-0.01, 0.01),
  std.upper = 1000,
  d0.lower = NULL,
  d0.upper = NULL,
  alpha.lower = 0.5,
  alpha.upper = 5,
  beta.lower = 0.05,
  beta.upper = 0.15,
  nsim = 2000,
  nchains = 8,
  parallel = TRUE,
  stan.output.file = NULL,
  prob = 0.95,
  seed = as.numeric(Sys.time()),
  min_repls = 5,
  adapt_delta = 0.8,
  max_treedepth = 10,
  ...
)
}
\arguments{
\item{baseline}{(`character`)\cr First algorithm. Value in 'algorithm'
column.}

\item{algorithm}{(`character`)\cr Second algorithm. Value in 'algorithm' 
column. If not defined, the baseline is tested against all algorithms 
in the data frame.}

\item{measure}{(`character`)\cr Name of the 'measure' column. If not 
defined, the first 'measure' column in the data frame is used.}

\item{compare}{(`character`)\cr Defines if one algorithm needs to perform 
better ({\code{better}}) for decisions based on the posterior 
distribution or whether it is sufficient to perform not worse 
({\code{equal}}).}

\item{rho}{(`double`)\cr Correlation factor. Default is 0.1.}

\item{max_repls}{(`double`)\cr Maximum number of replications. If a complete 
data frame is passed ({\code{max_repls}}) should correspond to the 
maximum number of replications that are built. Default is 20.}

\item{rope}{(`double`)\cr Region of practical equivalence. Default is 
c(-0.01, 0.01).}

\item{std.upper}{(`double`)\cr Factor to set the upper bound for both sigma_i 
and sigma_0. Default is 1000.}

\item{d0.lower}{(`any`)\cr Lower bound for the prior for mu_0. If not 
provided, the smallest observed difference is used.}

\item{d0.upper}{(`any`)\cr Upper bound for the prior for mu_0. If not 
provided, the biggest observed difference is used.}

\item{alpha.lower}{(`double`)\cr Lower bound for the (uniform) prior for the 
alpha hyperparameter. Default is 0.5.}

\item{alpha.upper}{(`double`)\cr Upper bound for the (uniform) prior for the 
alpha hyperparameter. Default is 0.5.}

\item{beta.lower}{(`double`)\cr Lower bound for the (uniform) prior for the
beta hyperparameter. Default is 0.5.}

\item{beta.upper}{(`double`)\cr Upper bound for the (uniform) prior for the
beta hyperparameter. Default is 0.5.}

\item{nsim}{(`double`)\cr Number of samples (per chain) used to estimate the 
posterior distribution. Note that, by default, half the simulations are 
used for the burn-in.}

\item{nchains}{(`double`)\cr Number of MC chains to be simulated. As half the 
simulations are used for the warm-up, the total number of simulations  
will be \code{nchain}*\code{nsim}/2.}

\item{parallel}{(`logical`)\cr If \code{true}, Stan code is executed in 
parallel.}

\item{stan.output.file}{(`character`)\cr String containing the base name for 
the output files produced by Stan. If \code{NULL}, no files are stored.}

\item{prob}{(`double`)\cr Threshold probability that decision rely on. 
Default is 0.95.}

\item{seed}{(`double`)\cr Optional parameter used to fix the random seed.}

\item{min_repls}{(`double`)\cr Minimum number of replications that is 
used/generated before an optional stopping rule is activated. Default is 
5.}

\item{adapt_delta}{(`double`)\cr Average proposal acceptance probability 
during Stanâ€™s adaptation period.}

\item{max_treedepth}{(`double`)\cr  Maximum treedepth parameter.}

\item{...}{(any)\cr Additional arguments for ({\code{get_replication}}). 
To pass a complete data frame, set ({\code{df}}) (`character`).}
}
\value{
(`list`)\cr A list containing the following components:
\itemize{
    \item{\code{measure}} (`character`)\cr A string with the name of the 
        measure column. 
    \item{\code{method}} (`character`)\cr A string with the name of the 
        method. 
    \item{\code{baseline}} (`character`)\cr A string with the name of the 
        first algorithm. Value in 'algorithm' column. 
    \item{\code{data_frame}} (`list`)\cr  A list containing the following 
        components:
    \item{\code{algorithm}} (`character`)\cr Second algorithm. Value in 
        'algorithm' column. If not defined, the baseline is tested against 
        all algorithms in the data frame. 
    \item{\code{left}} (`double`)\cr Left probability. 
    \item{\code{rope}} (`double`)\cr Rope probability. 
    \item{\code{right}} (`double`)\cr Right probability. 
    \item{\code{repls}} (`double`)\cr Number of evaluated replications. 
    \item{\code{probabilities}} (`character`)\cr Decisions based on posterior 
        probabilities and threshold probability. 
}
}
\description{
This function implements a sequential approach of the Bayesian 
    hierarchical test to compare the performance of machine learning 
    algorithms to one another. Sample size is not fixed in advance, data are 
    evaluated as they are collected. Further sampling is stopped in 
    accordance with a pre-defined stopping rule.
}
\details{
The basis for this test has first been implemented in scmamp.
}
\examples{
    \dontrun{
    results <- seq_b_hierarchical_test(df = test_benchmark_small, 
      baseline = "algo_1", algorithm = "algo_3", max_repls = 10, 
      min_repls = 8)
    }
}
\references{
\url{https://github.com/b0rxa/scmamp}
}
